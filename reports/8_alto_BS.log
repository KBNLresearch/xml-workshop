Traceback (most recent call last):
  File "C:\Users\mirjam\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\mirjam\anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
## import urllib, it is a standard library so does not need to be installed
from urllib.request import urlopen

filename = 'http://resolver.kb.nl/resolve?urn=ddd:010097934:mpeg21:a0001:ocr'
## Remove the first part from the filename, so you keep only ddd:010097934:mpeg21:a0001:ocr'
filename = filename.split('=')[1]
## Replace the : with _
filename = filename.replace(':', '_')

url = 'http://resolver.kb.nl/resolve?urn=ddd:010097934:mpeg21:a0001:ocr'

## write XML to file, downloading happens in this step too.
with open(filename + ".xml", "w", encoding="utf-8") as f:
    f.write(urlopen(url).read().decode('utf-8'))
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mHTTPError[0m                                 Traceback (most recent call last)
Input [1;32mIn [9][0m, in [0;36m<cell line: 13>[1;34m()[0m
[0;32m     12[0m [38;5;66;03m## write XML to file, downloading happens in this step too.[39;00m
[0;32m     13[0m [38;5;28;01mwith[39;00m [38;5;28mopen[39m(filename [38;5;241m+[39m [38;5;124m"[39m[38;5;124m.xml[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mw[39m[38;5;124m"[39m, encoding[38;5;241m=[39m[38;5;124m"[39m[38;5;124mutf-8[39m[38;5;124m"[39m) [38;5;28;01mas[39;00m f:
[1;32m---> 14[0m     f[38;5;241m.[39mwrite([43murlopen[49m[43m([49m[43murl[49m[43m)[49m[38;5;241m.[39mread()[38;5;241m.[39mdecode([38;5;124m'[39m[38;5;124mutf-8[39m[38;5;124m'[39m))

File [1;32m~\anaconda3\lib\urllib\request.py:214[0m, in [0;36murlopen[1;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[0;32m    212[0m [38;5;28;01melse[39;00m:
[0;32m    213[0m     opener [38;5;241m=[39m _opener
[1;32m--> 214[0m [38;5;28;01mreturn[39;00m [43mopener[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

File [1;32m~\anaconda3\lib\urllib\request.py:523[0m, in [0;36mOpenerDirector.open[1;34m(self, fullurl, data, timeout)[0m
[0;32m    521[0m [38;5;28;01mfor[39;00m processor [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprocess_response[38;5;241m.[39mget(protocol, []):
[0;32m    522[0m     meth [38;5;241m=[39m [38;5;28mgetattr[39m(processor, meth_name)
[1;32m--> 523[0m     response [38;5;241m=[39m [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[0;32m    525[0m [38;5;28;01mreturn[39;00m response

File [1;32m~\anaconda3\lib\urllib\request.py:632[0m, in [0;36mHTTPErrorProcessor.http_response[1;34m(self, request, response)[0m
[0;32m    629[0m [38;5;66;03m# According to RFC 2616, "2xx" code indicates that the client's[39;00m
[0;32m    630[0m [38;5;66;03m# request was successfully received, understood, and accepted.[39;00m
[0;32m    631[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;241m200[39m [38;5;241m<[39m[38;5;241m=[39m code [38;5;241m<[39m [38;5;241m300[39m):
[1;32m--> 632[0m     response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparent[49m[38;5;241;43m.[39;49m[43merror[49m[43m([49m
[0;32m    633[0m [43m        [49m[38;5;124;43m'[39;49m[38;5;124;43mhttp[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[0;32m    635[0m [38;5;28;01mreturn[39;00m response

File [1;32m~\anaconda3\lib\urllib\request.py:561[0m, in [0;36mOpenerDirector.error[1;34m(self, proto, *args)[0m
[0;32m    559[0m [38;5;28;01mif[39;00m http_err:
[0;32m    560[0m     args [38;5;241m=[39m ([38;5;28mdict[39m, [38;5;124m'[39m[38;5;124mdefault[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mhttp_error_default[39m[38;5;124m'[39m) [38;5;241m+[39m orig_args
[1;32m--> 561[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_call_chain[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m

File [1;32m~\anaconda3\lib\urllib\request.py:494[0m, in [0;36mOpenerDirector._call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    492[0m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[0;32m    493[0m     func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[1;32m--> 494[0m     result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m
[0;32m    495[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m    496[0m         [38;5;28;01mreturn[39;00m result

File [1;32m~\anaconda3\lib\urllib\request.py:641[0m, in [0;36mHTTPDefaultErrorHandler.http_error_default[1;34m(self, req, fp, code, msg, hdrs)[0m
[0;32m    640[0m [38;5;28;01mdef[39;00m [38;5;21mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[1;32m--> 641[0m     [38;5;28;01mraise[39;00m HTTPError(req[38;5;241m.[39mfull_url, code, msg, hdrs, fp)

[1;31mHTTPError[0m: HTTP Error 400: Bad Request
HTTPError: HTTP Error 400: Bad Request


Traceback (most recent call last):
  File "C:\Users\mirjam\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\mirjam\anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\mirjam\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import xml.etree.ElementTree as ET
import pandas as pd

tree = ET.parse('data/page.xml')
root = tree.getroot()

ns = {'ns0': 'http://schema.primaresearch.org/PAGE/gts/pagecontent/2010-03-19'}

dict_order = {}

for order in root.findall('.//ns0:ReadingOrder', ns):
    for group in root.findall('.//ns0:OrderedGroup', ns):
        groupnr = group.get('id')
        for suborder in group.findall('.//ns0:RegionRefIndexed', ns):  
            region = suborder.get('regionRef')
            index = suborder.get('index')
            dict_order.setdefault(region,[]).append([groupnr, index])
                
content_list = []

for newspaper in root.findall('.//ns0:TextRegion', ns):
    region = newspaper.get('id')
        if region in dict_order:
            groupvalues = dict_order[region]
            group = groupvalues[0][0]
            index = groupvalues[0][1]
        else:
            group = 0
            index = 0
    for content in newspaper.findall('.//ns0:Unicode', ns):
        content = content.text
    content_list.append([group, index, region, content])

newspaper_with_order = pd.DataFrame(content_list, columns = ["Group", "Index", "Region", "Content"]) 
newspaper_with_order = newspaper_with_order.sort_values(['Group', 'Index'], ascending = [True, True])

newspaper_with_order.to_csv('newspaper_with_order.csv')
------------------

[1;36m  Input [1;32mIn [6][1;36m[0m
[1;33m    if region in dict_order:[0m
[1;37m    ^[0m
[1;31mIndentationError[0m[1;31m:[0m unexpected indent

IndentationError: unexpected indent (1458247707.py, line 23)

